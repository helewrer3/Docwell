name: BuildDeploy

on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: docker-compose --version

      - name: Log in to Azure Container Registry
        run: docker login -u ${{ vars.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }} ${{ vars.ACR_USERNAME }}.azurecr.io

      - name: Setup .env file
        run: |
          touch .env
          echo "DB_HOST=${{ vars.DB_HOST }}" >> .env
          echo "DB_DATABASE=${{ vars.DB_DATABASE }}" >> .env
          echo "DB_USER=${{ vars.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_FIRST_USER=${{ vars.DB_FIRST_USER }}" >> .env
          echo "DB_FIRST_PASSWORD=${{ secrets.DB_FIRST_PASSWORD }}" >> .env
          echo "DB_VOLUME=${{ vars.DB_VOLUME }}" >> .env
          echo "DB_PORT=${{ vars.DB_PORT }}" >> .env
          echo "SERVER_ENV=${{ vars.SERVER_ENV }}" >> .env
          echo "API_VOLUME=${{ vars.API_VOLUME }}" >> .env
          echo "SERVER_PORT=${{ vars.SERVER_PORT }}" >> .env
          echo "DOCWELL_REPORTS_STORAGE_CONNECTION_STRING=${{ secrets.DOCWELL_REPORTS_STORAGE_CONNECTION_STRING }}" >> .env

      - name: Build and push Docker images
        run: |
          docker-compose --env-file .env build
          docker-compose --env-file .env push
