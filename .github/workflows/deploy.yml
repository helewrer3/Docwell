name: Deploy

on:
  - workflow_dispatch

jobs:
  main:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          touch .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DOCWELL_REPORTS_STORAGE_CONNECTION_STRING=${{ secrets.DOCWELL_REPORTS_STORAGE_CONNECTION_STRING }}" >> .env
          echo "DB_DATABASE=${{ vars.DB_DATABASE }}" >> .env
          echo "DB_FIRST_USER=${{ vars.DB_FIRST_USER }}" >> .env
          echo "DB_FIRST_PASSWORD=${{ secrets.DB_FIRST_PASSWORD }}" >> .env
          echo "AZ_STORAGE_ACCOUNT_NAME=${{ vars.AZ_STORAGE_ACCOUNT_NAME }}" >> .env
          echo "AZ_REGISTRY_NAME=${{ vars.AZ_REGISTRY_NAME }}" >> .env

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.CI_AZURE_CREDENTIALS }}

      - name: Install Docker Compose CLI
        run: >
          curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh

      - name: Docker Login to Azure
        run: |
          CLIENT_ID=$(echo '${{ secrets.CI_AZURE_CREDENTIALS }}' | jq --raw-output .clientId)
          CLIENT_SECRET=$(echo '${{ secrets.CI_AZURE_CREDENTIALS }}' | jq --raw-output .clientSecret)
          TENANT_ID=$(az account show --query homeTenantId --output tsv)
          docker login azure --client-id "$CLIENT_ID" --client-secret "$CLIENT_SECRET" --tenant-id "$TENANT_ID"
          az acr login --name "${{ vars.AZ_REGISTRY_NAME }}" --username "$CLIENT_ID" --password "$CLIENT_SECRET"

      - name: Create ACI context
        run: |
          docker context create aci acictx --resource-group "Docwell" --location "centralindia" --subscription-id "a554a48b-0200-4365-8ad0-e8fb6434dce6"
          docker context use acictx

      - name: Deploy the app
        run: |
          docker-compose -f "$GITHUB_WORKSPACE/docker-compose.aci.yml" --env-file .env --verbose config
          export $(cat .env | xargs) && docker compose -f "$GITHUB_WORKSPACE/docker-compose.aci.yml" --verbose up
